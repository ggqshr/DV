<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ggq.mapper.Report_userinfoMapper">
    <resultMap id="BaseResultMap" type="ggq.model.Report_userinfo">
        <constructor>
            <arg column="platform" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="acdate" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="type" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="num" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="datediff" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        </constructor>
    </resultMap>
    <insert id="insert" parameterType="ggq.model.Report_userinfo">
        insert into report_userinfo (platform, acdate, type,
                                     num, datediff)
        values (#{platform,jdbcType=VARCHAR}, #{acdate,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER},
                #{num,jdbcType=INTEGER}, #{datediff,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="ggq.model.Report_userinfo">
        insert into report_userinfo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="platform != null">
                platform,
            </if>
            <if test="acdate != null">
                acdate,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="num != null">
                num,
            </if>
            <if test="datediff != null">
                datediff,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="platform != null">
                #{platform,jdbcType=VARCHAR},
            </if>
            <if test="acdate != null">
                #{acdate,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="num != null">
                #{num,jdbcType=INTEGER},
            </if>
            <if test="datediff != null">
                #{datediff,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="select" resultType="ggq.model.Report_userinfo">
        select *
        from report_userinfo
        limit 1
    </select>
    <select id="getInfoByDateAndType" resultType="ggq.model.Report_userinfo">
        select sum(num) num
        from report_userinfo
        where acdate = #{0}
          and type = #{1}
        group by acdate
    </select>
    <select id="getTotalUserNum" resultType="java.lang.Integer">
        select count(uuid) num
        from cleanlog
        where accessDate = #{_parameter}
        group by accessdate
    </select>
    <select id="getNewUserDataAndActiveDataBetweenDate" resultType="ggq.model.NewUserAndActiveUserData">
        SELECT total.accessdate                                                                 acDate,
               (xin.xi / (CASE IFNULL(total.num, 0) WHEN 0 THEN 1 ELSE total.num END) * 100)    newRate,
               (active.ac / (CASE IFNULL(total.num, 0) WHEN 0 THEN 1 ELSE total.num END) * 100) activeRate

        FROM (SELECT acdate, sum(num) xi FROM report_userinfo WHERE type = 1 GROUP BY acdate) AS xin,
             (SELECT acdate, sum(num) ac FROM report_userinfo WHERE type = 3 GROUP BY acdate) AS active,
             (SELECT accessdate, count(uuid) num FROM cleanlog GROUP BY accessdate) AS total
        WHERE xin.acdate = active.acdate
          AND active.acdate = total.accessdate
          AND total.accessDate BETWEEN #{0} and #{1}

    </select>
    <select id="getOldAndNewUserPerDay" resultType="ggq.model.oldUserAndNewUserModel">
        SELECT old.accessDate, old.oldnum, new.newnum
        FROM (SELECT accessdate, count(*) oldnum
              FROM cleanlog AS c
              WHERE c.uuid IN (SELECT uuid AS uu FROM user_login_history)
              group by accessdate) old,
             (SELECT acdate, count(*) newnum FROM report_userinfo WHERE type = 1 group by acdate) new
        WHERE old.accessdate = new.acdate
          and new.acdate BETWEEN #{0} and #{1}
    </select>
    <select id="getRemainUser" resultType="ggq.model.Report_userinfo">
        select datediff, sum(num) num
        from report_userinfo
        where type = 2
        group by datediff
        ORDER BY datediff asc
        limit 6
    </select>
</mapper>